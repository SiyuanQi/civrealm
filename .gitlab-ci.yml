variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  CI_DEBUG_SERVICES: "true"

cache:
  key: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}"
  paths:
    - .cache/pip
    - venv/
    - minigame.zip

.before_script_template:
  before_script:
    - "python3 --version"
    - "pip install virtualenv -i https://pypi.tuna.tsinghua.edu.cn/simple"
    - "virtualenv venv"
    - "source venv/bin/activate"

.python_test_template: &python_test_template
  stage: tests
  services:
    - name: civrealm/freeciv-web:dev
      alias: freeciv_web
      entrypoint:
        - "/bin/bash"
        - "-c"
        - |
          until [ -f "$CI_PROJECT_DIR/.git/index" ]; do true ; done;
          while [ -f "$CI_PROJECT_DIR/.git/index.lock" ]; do true ; done;
          python3 "$CI_PROJECT_DIR/copy_ci_test_saves.py"
          /docker/docker-entrypoint.sh && sleep infinity
  variables:
    CIVREALM_HOST_URL: "freeciv_web"
    CIVREALM_HOST_PORT: "80"
  script:
    - "pip install -e . -i https://pypi.tuna.tsinghua.edu.cn/simple"
    - until [ -f "minitask_zipped.flag" ]; do sleep 60 && echo "Waiting for minigame.zip to be downloaded!" ; done;
    - "pytest -vv -x"

stages:
  - tests
  - pages

pages:
  extends: .before_script_template
  stage: pages
  image: python:latest
  script:
    - "pip install mkdocs mkdocs-autorefs mkdocs-material mkdocstrings[python] -i https://pypi.tuna.tsinghua.edu.cn/simple"
    - mkdocs build
  artifacts:
    paths:
      - public
  only:
    - dev

test_python3.8:
  image: python:3.8
  extends:
    - .before_script_template
  allow_failure: true
  <<: *python_test_template

test_python3.9:
  image: python:3.9
  extends:
    - .before_script_template
  allow_failure: true
  <<: *python_test_template

test_python3.10:
  image: python:3.10
  extends:
    - .before_script_template
  allow_failure: true
  <<: *python_test_template

test_python3.11:
  image: python:3.11
  extends:
    - .before_script_template
  allow_failure: true
  <<: *python_test_template

local_pytest:
  stage: tests
  script:
    - sudo pip install -e .
    - pytest -x
  tags:
    - local_pytest

docker_pytest:
  stage: tests
  image: docker:24.0.5
  services:
   - name: docker:24.0.5-dind
     alias: dind
  variables:
    DOCKER_HOST: tcp://dind:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --update
    - apk add bash curl busybox-extras
    - apk add python3=3.9.18-r0 --repository=http://dl-cdn.alpinelinux.org/alpine/v3.15/main
    - ln -sf python3 /usr/bin/python
    - python3 --version
    - wget https://bootstrap.pypa.io/get-pip.py
    - python3 get-pip.py
    - python3 -m pip install --upgrade pip
    - python3 -m pip install virtualenv -i https://pypi.tuna.tsinghua.edu.cn/simple
    - virtualenv venv
    - source venv/bin/activate
    - cd /data/mas/ &&  docker load -i freeciv_image_dev.tar
    - unzip ray.zip -d /data/ray/ && cd /data/ray && pip install -e .
  script:
    - cd /builds/civilization/civrealm/
    - python3 -m pip install -e . -i https://pypi.tuna.tsinghua.edu.cn/simple
    - docker compose up -d
    - until [ `echo ""|telnet dind:8080|grep Connected|wc -l` -eq 1 ]; do sleep 1s; done;
    - until [ `echo ""|curl dind:8080/pubstatus|grep civsocket|wc -l` -eq 1 ]; do sleep 1s; done;
    - pytest -x --host dind
  tags:
    - docker_pytest
